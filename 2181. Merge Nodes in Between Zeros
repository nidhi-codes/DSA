/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeNodes(ListNode* head) {
        ListNode *temp = head;
        ListNode *newHead = NULL;
        ListNode *curr = NULL;
        int sum = 0;

        while(temp){
            if(temp->val != 0){
                sum += temp->val;
            }
            if(temp->val == 0){
                if(sum != 0 ){
                    ListNode *newNode = new ListNode(sum);
                    if(newHead == NULL){
                        newHead = newNode;
                        curr = newHead;
                    }
                    else{
                        curr->next = newNode;
                        curr = newNode;
                    }
                }
                sum = 0;
            }
            temp = temp->next;
        }
        return newHead;
    }
};
