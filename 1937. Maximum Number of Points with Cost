class Solution {
public:
    long long maxPoints(vector<vector<int>>& arr) {

        int n = arr.size();
        int m = arr[0].size();
        long long ans = 0;

        vector<vector<long long>>dp(n, vector<long long>(m, 0));

        for(int i=0; i<m; i++){
            dp[n-1][i] = arr[n-1][i];
        }

        for(int i=n-2; i>=0; i--){
            // for(int j=0; j<m; j++){
            //     long long val = 0;
            //     for(int k=0; k<m; k++){
            //         long long temp = arr[i][j] + dp[i+1][k] - abs(j-k);
            //         val = max(temp, val);
            //     }
            //     dp[i][j] = val;
            // }

            vector<long long> left(m, 0), right(m, 0);

            //left
            left[0] = dp[i+1][0];
            for(int j=1; j<m; j++){
                left[j] = max(left[j-1]-1, dp[i+1][j]);
            }

            //right
            right[m-1] = dp[i+1][m-1];
            for(int j=m-2; j>=0; j--){
                right[j] = max(right[j+1]-1, dp[i+1][j]);
            }

            //max
            for(int j=0; j<m; j++){
                dp[i][j] = arr[i][j] + max(left[j], right[j]);
            }
        }

        for(int i=0; i<m; i++){
            ans = max(ans, dp[0][i]);
        }

        return ans;
    }
};
