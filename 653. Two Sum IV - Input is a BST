/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    void recursion(TreeNode* root, vector<int>& inorder){

        if(root == NULL){
            return;
        }

        recursion(root->left, inorder);
        inorder.push_back(root->val);
        recursion(root->right, inorder);
        
    }

    bool findTarget(TreeNode* root, int target) {

        vector<int> inorder;
    
        recursion(root, inorder);

        int len = inorder.size();
        int i=0;
        int j=len-1;

        while(i<j){

            int sum = inorder[i]+inorder[j];

            if(sum == target){
                return true;
            }

            else if(sum<target){
                i++;
            }

            else{
                j--;
            }
        }
        
        return false;   
    }
};
