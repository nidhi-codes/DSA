/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> ans;
    	
    	if(root == NULL){
    	    return ans;
    	}
    	
    	queue<TreeNode*> q;
    	
    	q.push(root);
    	
    	bool leftToRight = true;
    	
    	
    	while(!q.empty()){
    	    
    	    int len = q.size();
    	    vector<int> temp(len);
    	    
    	    for(int i=0; i<len; i++){
    	        TreeNode* t = q.front();
        	    q.pop();
        	    
        	    if(leftToRight){
        	        temp[i] = t->val;
        	    }
        	    
        	    else{
        	        temp[len-i-1] = t->val;
        	    }
        	    
        	    if(t->left){
                    q.push(t->left);
                }
                
                if(t->right){
                    q.push(t->right);
                }
        	    
    	    }
    	    
    	    leftToRight = !leftToRight;
    	    
    	    ans.push_back(temp);
 
    	}
    	
    	return ans;
    }
};
