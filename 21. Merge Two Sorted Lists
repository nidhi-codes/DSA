/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* ans = NULL;
        ListNode* last = NULL;
        ListNode* temp1 = list1;
        ListNode* temp2 = list2;

        while(temp1 && temp2){
            if(temp1->val <= temp2->val){
                if(ans == NULL){
                    last = ans = temp1;
                    temp1 = temp1->next;
                    ans->next = NULL;
                }
                else{
                    last->next = temp1;
                    last = temp1;
                    temp1 = temp1->next;
                    last->next = NULL;
                }
            }
            else{
                if(ans == NULL){
                    last = ans = temp2;
                    temp2 = temp2->next;
                    ans->next = NULL;
                }
                else{
                    last->next = temp2;
                    last = temp2;
                    temp2 = temp2->next;
                    last->next = NULL;
                }
            }
        }

        if(temp1){
            if(ans == NULL){
                ans = temp1;
            }
            else{
                last->next = temp1;
            }
        }   

        if(temp2){
            if(ans == NULL){
                ans = temp2;
            }
            else{
                last->next = temp2;
            }  
        }
        return ans;
    }
};
