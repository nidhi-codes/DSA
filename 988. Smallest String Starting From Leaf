/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    

    void recursion(TreeNode* root, string s, vector<string>& ans){

        if(root == NULL){
            return;
        }

        s.push_back('a' + root->val);

        if(root->left == NULL && root->right == NULL){
            reverse(s.begin(), s.end());
            ans.push_back(s);
            reverse(s.begin(), s.end());
        }

        recursion(root->left, s, ans);
        recursion(root->right, s, ans);
    }

    string smallestFromLeaf(TreeNode* root) {
        
        string s = "";
        vector<string> ans;

        recursion(root, s, ans);
        sort(ans.begin(), ans.end());

        return ans[0];

    }
};
