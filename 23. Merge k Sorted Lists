/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        int n = lists.size();
        priority_queue<int,vector<int>,greater<int>>pq;

        for(int i = 0 ; i < n ; i ++){
            ListNode*temp = lists[i];
            while(temp != NULL){
                pq.push(temp->val);
                temp = temp->next;
            }

        }

        ListNode* head=NULL;
        ListNode* temp=NULL;
        while(!pq.empty()){
            int j=pq.top(); 
            pq.pop();
            ListNode *newnode=new ListNode(j);
            if(head==NULL){
                head=newnode;
                temp=head;
            }
            else{
                temp->next=newnode;
                temp=temp->next;
            }
        }
        return head;
    }
};
