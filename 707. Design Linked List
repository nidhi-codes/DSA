class Node{
public:
    int val;
    Node *next;
    Node(int val) : val(val),next(NULL) {}
};

class MyLinkedList {
private:
    Node *first;
public:
    MyLinkedList() : first(NULL) {}
    
    int length(){
        Node *temp = first;
        int len=0;
        while(temp){
            len++;
            temp = temp->next;
        }
        return len;
    }

    int get(int index) {
        if(index<0 || index>=length()){
            return -1;
        }
        Node *temp = first;
        for(int i=0;i<index;i++){
            temp = temp->next;
        }
        return temp->val;
    }
    
    void addAtHead(int val) {
        Node *newNode = new Node(val);
        // newNode->val = val;
        newNode->next = first;
        first = newNode;
    }
    
    void addAtTail(int val) {
        Node *newNode = new Node(val);
        // newNode->val = val;
        newNode->next = NULL;
        if(first == NULL){
            first = newNode;
        }
        else{
            Node *temp = first;
            while(temp->next != NULL){
                temp = temp->next;
            }
            temp->next = newNode;
        } 
    }
    
    void addAtIndex(int index, int val) {
        if(index<0 || index>length()){
            return;
        }
        if(index == 0){
            addAtHead(val);
            return;
        }
        Node *newNode = new Node(val);
        // newNode->val = val;
        Node *temp = first;
        for(int i=0;i<index-1;i++){
            temp = temp->next;
        }
        newNode->next = temp->next;
        temp->next = newNode;
    }
    
    void deleteAtIndex(int index) {
        if(index<0 || index>=length()){
            return;
        }
        if(index==0){
            Node *temp = first;
            first = first->next;
            delete temp;
            return;
        }
        Node *temp1 = first;
        for(int i=0;i<index-1;i++){
            temp1 = temp1->next;
        }
        Node *toDelete = temp1->next;
        temp1->next = toDelete->next;
        delete toDelete;
    }
};

/**
 * Your MyLinkedList object will be instantiated and called as such:
 * MyLinkedList* obj = new MyLinkedList();
 * int param_1 = obj->get(index);
 * obj->addAtHead(val);
 * obj->addAtTail(val);
 * obj->addAtIndex(index,val);
 * obj->deleteAtIndex(index);
 */
