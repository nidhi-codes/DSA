class Solution {
public:
    vector<int> findMissingAndRepeatedValues(vector<vector<int>>& grid) {
        
        vector<int>nums;
        for(int i=0; i<grid.size(); i++){
            for(int j=0; j<grid.size(); j++) nums.push_back(grid[i][j]);
        }

        int len = nums.size();
        int repeat = -1;
        int missing = -1;
        int sum= (len*(len+1))/2;

        for(int i=0; i<len; i++){
            int temp = abs(nums[i]);
            if(temp > 0 && temp <= len) {
                if(nums[temp - 1] < 0){  // Using temp-1 to correctly index
                    repeat = temp;
                    break;
                }
                nums[temp - 1] = -nums[temp - 1];  // Mark the index as visited
            }
        }

        for(int i=0; i<len; i++){
            if(repeat == abs(nums[i])) continue;
            sum -= abs(nums[i]);
        }

        sum -= repeat;
        missing = sum;
        return {repeat, missing};
    }
};
