/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    TreeNode* recursion(vector<int>& pre, int& i, int min, int max){
    
        if((i >= pre.size()) || (pre[i] < min) || (pre[i] > max)){
            return NULL;
        }

        TreeNode*  root = new TreeNode (pre[i++]);
        root->left = recursion(pre, i, min, root->val);
        root->right = recursion(pre, i, root->val, max);
        return root;

    
    }

    TreeNode* bstFromPreorder(vector<int>& preorder) {

        int min = INT_MIN;
        int max = INT_MAX;
        int i=0;
        return recursion(preorder, i, min, max);

    }
};
