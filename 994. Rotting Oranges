class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
        int row=grid.size();
        int col=grid[0].size();
        
        vector<vector<int>>vis(row, vector<int>(col, 0));
        
        int ans = -1;
        int oneCount = 0;

        queue<pair<int, int>> q;
        int rowChange[] = {-1, 0, 1, 0};
        int colChange[] = {0, 1, 0, -1};
        
        for(int i=0; i<row; i++){
            for(int j=0; j<col; j++){
                if(grid[i][j] == 2){
                    q.push({i,j});
                    vis[i][j] = 1;
                }

                if(grid[i][j] == 1){
                    oneCount++;
                }
            }
        }
        
        if(q.empty()){
            
            if(oneCount == 0){
                return 0;
            }

            return -1;
        }
        
        while(!q.empty()){
            
            int size = q.size();
            for(int i=0; i<size; i++){
                
                pair<int, int> temp = q.front();
                q.pop();
                int r = temp.first;
                int c = temp.second;
                
                
                
                for(int j=0; j<4; j++){
                    int newRow = r+rowChange[j];
                    int newCol = c+colChange[j];
                    
                    if(newRow>=0 && newRow<row && newCol >=0 && newCol<col && grid[newRow][newCol] == 1 && vis[newRow][newCol] == 0){
                        q.push({newRow, newCol});
                        vis[newRow][newCol] = 1;
                    }
                }
                
            }
            
            ans++;
        }
        
        for(int i=0; i<row; i++){
            for(int j=0; j<col; j++){
                if(grid[i][j] == 1 && vis[i][j] == 0){
                    return -1;
                }
            }
        }
        
        return ans;
    }
};
