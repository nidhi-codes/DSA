/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int Length(ListNode* head){
        int len = 0;
        ListNode* curr = head;
        while(curr){
            len++;
            curr = curr->next;
        }
        return len;
    }
    
    ListNode* rotateRight(ListNode* head, int k){
        int len = Length(head);
        ListNode* curr = head;
        ListNode* tail = NULL;
        ListNode* newHead = NULL;
        if(len == 0 || k==len || k==0){
            return head;
        }
        
        k = k%len;
        for(int i=0;i <len-k-1;i++){
            curr = curr->next;
        }
        tail = curr;
        while(curr->next){
            curr = curr->next;
        }
        curr->next = head;
        newHead = tail->next;
        tail->next = nullptr;
        
        return newHead;
    }
};
