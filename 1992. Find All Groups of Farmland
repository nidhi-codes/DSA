class Solution {
public:

    void dfs(vector<vector<int>>& land, int i, int j, int row, int col, int& x, int& y){

        if(i<0 || j<0 || i>row-1 || j>col-1 || land[i][j] != 1){
            return;
        }
        
        land[i][j] = 0;

        x = max(i, x);
        y = max(j, y);

        dfs(land, i+1, j, row, col, x, y);
        dfs(land, i-1, j, row, col, x, y);
        dfs(land, i, j+1, row, col, x, y);
        dfs(land, i, j-1, row, col, x, y);
        
    }
    vector<vector<int>> findFarmland(vector<vector<int>>& land) {
        
        vector<vector<int>> ans;

        int row = land.size();
        int col = land[0].size();

        for(int i=0; i<row; i++){

            for(int j=0; j<col; j++){

                if(land[i][j] == 1){
                    int x = i;
                    int y = j;
                    dfs(land, i, j, row, col, x, y);
                    ans.push_back({i,j,x,y});
                }
            }
        }

        return ans;
    }
};
