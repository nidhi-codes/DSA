class Solution {
public:
    int solve(vector<int>& days, vector<int>& costs, int i, vector<int>& dp){

        if(i>=days.size()){
            return 0;
        }

        if(dp[i] != -1){
            return dp[i];
        }

        int _1_day = costs[0]+solve(days,costs, i+1, dp);

        int temp = days[i]+7;
        int j=i;
        while(j<days.size() && days[j] < temp){
            j++;
        }
        int _7_day = costs[1]+solve(days, costs, j, dp);

        temp = days[i]+30;
        j=i;
        while(j<days.size() && days[j]<temp){
            j++;
        }
        int _30_day = costs[2]+solve(days, costs, j, dp);

        dp[i] = min(min(_1_day, _7_day), _30_day);
        return dp[i];
        
    }
    int mincostTickets(vector<int>& days, vector<int>& costs) {

        vector<int> dp(days.size()+1, -1);
        return solve(days, costs, 0, dp);
    }
};
