/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:

    ListNode* reverse(ListNode* head){

        ListNode* curr = head;
        ListNode* prev = NULL;
        ListNode* next = NULL;

        while(curr){

            next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;

        }

        return prev;
    }
    ListNode* removeNodes(ListNode* head) {
        

        ListNode* temp = reverse(head);

        int max = temp->val;

        ListNode* newHead = temp;
        ListNode* tail = temp;

        temp = temp->next;

        while(temp){

            if(temp->val >= max){
                max = temp->val;
                tail->next = temp;
                tail = temp;
            }

            temp = temp->next;
        }

        tail->next = NULL;
        return reverse(newHead);
    }

};
