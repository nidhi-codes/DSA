/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        

            vector<vector<int>> ans;
            
            if(root == NULL){
                return ans;
            }
            
            //HD, levelwise value
           map<int, vector<int>> value;
           
           queue<pair<int, TreeNode*>>q;
           
           q.push(make_pair(0, root));
           
           while(!q.empty()){
               
               pair<int, TreeNode*> temp = q.front();
               q.pop();
               
               int hd = temp.first;
               TreeNode* nodes = temp.second;
               
               value[hd].push_back(nodes->val);
               
               if(nodes->left){
                   q.push(make_pair(hd-1, nodes->left));
               }
               
               if(nodes->right){
                   q.push(make_pair(hd+1, nodes->right));
               }
               
           }
           
           for(auto i : value){
                sort(i.second.begin(), i.second.end());
                ans.push_back(i.second);
           }
           
           return ans;
    }
};
