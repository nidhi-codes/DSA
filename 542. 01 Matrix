class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& grid) {
        int row = grid.size();
        int col = grid[0].size();
        
        vector<vector<int>> vis(row, vector<int>(col, 0));
        int rowChange[] = {-1,0,1,0};
        int colChange[] = {0,1,0,-1};
        queue<pair<int, int>> q;
        
        for(int i=0; i<row; i++){
            for(int j=0; j<col; j++){
                if(grid[i][j] == 0){
                    q.push({i,j});
                    vis[i][j] = -1;
                }
            }
        }
        
        int time = 1;
        while(!q.empty()){
            
            int size = q.size();
            
            for(int i=0; i<size; i++){
                int r =  q.front().first;
                int c = q.front().second;
                q.pop();
                
                for(int j=0; j<4; j++){
                    int newRow = r+rowChange[j];
                    int newCol = c+colChange[j];
                    
                    if(newRow >= 0 && newRow < row && newCol >= 0 && newCol < col && vis[newRow][newCol] == 0){
                        vis[newRow][newCol] = time;
                        q.push({newRow, newCol});
                    }
                }
            }
            
            time++;
        }
        
        for(int i=0; i<row; i++){
            for(int j=0; j<col; j++){
                if(vis[i][j] == -1){
                    vis[i][j] = 0;
                }
            }
        }
        
        return vis;
    }
};
