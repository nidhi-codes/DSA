/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    void recursion(TreeNode* root, int targetSum, vector<vector<int>>& ans, vector<int>temp){

        if(root == NULL){
            return;
        }

        temp.push_back(root->val);

        targetSum -= root->val;

        if(root->left == NULL && root->right == NULL && targetSum == 0){
            ans.push_back(temp);
        }

        recursion(root->left, targetSum, ans, temp);
        recursion(root->right, targetSum, ans, temp);
        
    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {

        vector<vector<int>> ans;

        vector<int> temp;

        recursion(root, targetSum, ans, temp);

        return ans;
    }
};
